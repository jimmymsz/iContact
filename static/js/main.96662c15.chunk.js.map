{"version":3,"sources":["components/layout/Header.jsx","context.js","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/pages/NotFound.jsx","components/pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","this","props","branding","Component","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","idx","findIndex","element","Number","updatedContacts","name","email","phone","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","startingContacts","wrap","_context","prev","next","axios","get","sent","data","forEach","el","newContact","stop","children","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","_this2","_this$props$contactIn","contactInfo","onClick","style","cursor","float","color","bind","marginRight","Contacts","deleteContact","cont","con","Fragment","map","c","contacts_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","AddContact","errors","defineProperty","target","onSubmit","preventDefault","uuid","Math","floor","random","_this$state","history","push","_this$state2","layout_TextInputGroup","EditContact","match","params","defaultValue","NotFound","textAlign","About","App","context_Provider","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96662c15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-1\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            {this.props.branding}\r\n          </Link>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <i className=\"fas fa-home\" /> Home\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <i className=\"fas fa-plus\" /> Add\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <i className=\"fas fa-question\" /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"EDIT_CONTACT\":\r\n      const idx = state.contacts.findIndex(\r\n        element => Number(element.id) === Number(action.payload.id)\r\n      );\r\n      let updatedContacts = state.contacts;\r\n\r\n      updatedContacts[idx].name = action.payload.name;\r\n      updatedContacts[idx].email = action.payload.email;\r\n      updatedContacts[idx].phone = action.payload.phone;\r\n\r\n      return {\r\n        ...state,\r\n        contacts: updatedContacts\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    // console.log(res.data);\r\n    let startingContacts = [...this.state.contacts];\r\n    res.data.forEach(el => {\r\n      const { name, id, phone, email } = el;\r\n      const newContact = { id, name, email, phone };\r\n      startingContacts = [...startingContacts, newContact];\r\n    });\r\n    this.setState({ contacts: startingContacts });\r\n  }\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: 11,\r\n      //   name: \"John Doe\",\r\n      //   email: \"jdoe@gmail.com\",\r\n      //   phone: \"555-111-2341\"\r\n      // },\r\n      // {\r\n      //   id: 12,\r\n      //   name: \"Karen Will\",\r\n      //   email: \"kwill@gmail.com\",\r\n      //   phone: \"123-111-2341\"\r\n      // },\r\n      // {\r\n      //   id: 13,\r\n      //   name: \"Henry Johnson\",\r\n      //   email: \"henry@gmail.com\",\r\n      //   phone: \"222-333-3341\"\r\n      // }\r\n    ],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  // onDeleteClick = () => {\r\n  //   this.props.deleteClickHandler();\r\n  // };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contactInfo;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                {\"  \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"blue\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    // return (\r\n\r\n    // );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contactInfo: PropTypes.object.isRequired,\r\n  deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  state = {};\r\n\r\n  deleteContact = id => {\r\n    const { contacts } = this.state;\r\n\r\n    const cont = contacts.filter(con => con.id !== id);\r\n\r\n    this.setState({ contacts: cont });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-primary\">Contact </span>\r\n                List\r\n              </h1>\r\n              {contacts.map(c => (\r\n                <Contact\r\n                  key={c.id}\r\n                  contactInfo={c}\r\n                  deleteClickHandler={this.deleteContact.bind(this, c.id)}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    // const { contacts } = this.state;\r\n    // return (\r\n    //   <React.Fragment>\r\n    //     {contacts.map(c => (\r\n    //       <Contact\r\n    //         key={c.id}\r\n    //         contactInfo={c}\r\n    //         deleteClickHandler={this.deleteContact.bind(this, c.id)}\r\n    //       />\r\n    //     ))}\r\n    //   </React.Fragment>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className=\"form-control form-control-lg\"\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n      />\r\n      {error && (\r\n        <div className=\"feedback\" style={{ color: \"red\" }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const uuid = Math.floor(Math.random() * 3000 + 3);\r\n\r\n    const { name, email, phone } = this.state;\r\n    const newContact = { id: uuid, name, email, phone };\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    // console.log(newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const id = this.props.match.params.id;\r\n\r\n    const { name, email, phone } = this.state;\r\n    const newContact = { id, name, email, phone };\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    // console.log(newContact);\r\n    dispatch({ type: \"EDIT_CONTACT\", payload: newContact });\r\n\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    defaultValue={\"defaultName\"}\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    defaultValue={\"defaultEmail\"}\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    defaultValue={\"defaultPhone\"}\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <br />\r\n      <h2>\r\n        <span className=\"text-danger\">404</span> Not Found\r\n      </h2>\r\n      <h3>The page you requested does not exist.</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0f</p>\r\n      <p className=\"text-secondary\">\r\n        YAGNI stands for \"you aren’t gonna need it\": don't implement something\r\n        until it is necessary. <br />\r\n        Always implement things when you actually need them, never when you just\r\n        foresee that you need them.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\n\n// import Contact from \"./components/Contact\";\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <AddContact />\n              <Contacts /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}